name: dev

on:
  push:
    branches:
    # - main
    - feat/kustomize

permissions:
  id-token: write
  contents: read

# env:
#   devClusterName: 'totally-wrong-answer' # cloudkube-dev-r9er-cluster

jobs:
  which-env:
    uses: ./.github/workflows/_config.yaml
    # runs-on: ubuntu-latest
    # outputs:
    #   target:         ${{ steps.resolved.outputs.target }}
    #   cluster:        ${{ steps.resolved.outputs.cluster }}
    #   resource-group: ${{ steps.resolved.outputs.resource-group }}
    #   url:            ${{ steps.resolved.outputs.url }}
    # steps:
    # - id: is-dev
    #   if: github.ref == 'refs/heads/feat/kustomize'
    #   shell: bash
    #   run: |
    #     echo "target=dev" >> $GITHUB_ENV
    #     echo "cluster=${{ env.devClusterName }}" >> $GITHUB_ENV
    #     echo "rg=cloudkube-dev-r9er-rg" >> $GITHUB_ENV
    #     echo "url='https://aks-architect.dev.cloudkube.io/'" >> $GITHUB_ENV

    # - id: resolved
    #   shell: bash
    #   run: |
    #     echo "::set-output name=target::${{ env.target }}"
    #     echo "::set-output name=cluster::${{ env.cluster }}"
    #     echo "::set-output name=resource-group::${{ env.rg }}"
    #     echo "::set-output name=url::${{ env.url }}"

  # tags:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     sha:     ${{ steps.patterns.outputs.git-sha }}
  #     dev:     ${{ steps.patterns.outputs.dev-tag }}
  #     staging: ${{ steps.patterns.outputs.staging-tag }}
  #     foo: ${{ steps.patterns.outputs.foo }}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - id: patterns
  #     uses: ./.github/actions/tag-conventions

  # docker:
  #   needs: tags
  #   uses: ./.github/workflows/job-docker.yaml
  #   with:
  #     environment: dev
  #     dev-tag: ${{ needs.tags.outputs.dev }}
  #   secrets:
  #     AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  #     AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  #     AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # deploy:
  #   needs: [tags, which-env]
  #   uses: ./.github/workflows/job-deploy.yaml
  #   with:
  #     environment:     ${{ needs.which-env.outputs.target }}                           # Configure
  #     git-sha:        ${{ needs.tags.outputs.sha }}
  #     image-tag:      ${{ needs.tags.outputs.dev }} # Configure
  #     resource-group: ${{ needs.which-env.outputs.resource-group }}         # Configure
  #     cluster-name:   ${{ needs.which-env.outputs.cluster }}    # Configure
  #     overlays:       ./manifests/overlays/${{ needs.which-env.outputs.target }}       # Configure
  #   secrets:
  #     AZURE_CLIENT_ID:       ${{ secrets.AZURE_CLIENT_ID }}
  #     AZURE_TENANT_ID:       ${{ secrets.AZURE_TENANT_ID }}
  #     AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  foo:
    needs: [which-env]
    runs-on: ubuntu-latest
    steps:
    - run: echo ${{ needs.tags.outputs.foo }}
    - run: echo ${{ needs.which-env.outputs.cluster }}

  # e2e:
  #   needs: [tags, deploy]
  #   runs-on: ubuntu-latest
  #   env:
  #     SELENIUM_TARGET_URL: 'https://aks-architect.dev.cloudkube.io/'  # Configure
  #     APP_BUILD_SHA: ${{ needs.tags.outputs.sha }}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v2
  #     with:
  #       node-version: '16'
  #   - run: |
  #       npm ci
  #       npm install chromedriver --chromedriver_version=LATEST

  #   - name: 'E2E Tests - first attempt'
  #     run: npm run confirm-deployment
  #     continue-on-error: true

  #   - name: 'E2E Tests - second attempt'
  #     run: npm run confirm-deployment
  #     continue-on-error: true

  #   - name: "Allow failures because GitHub does not support 'warn' builds."
  #     run: true
